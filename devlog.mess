# 2019-12-22

ok so there's this issue where if you inherit a schema you get something like
((my-inherited-schema:foo)
 (my-actual-schema:bar))

which is bad when we want the postmodern backend to have `:keys`
This is also potentially desirable behavoir

both can be resolved with some kind of extensible object which abstracts
a slot option, but i feel like we're adding too much shit if we do that.
might be worth it though.

No that's not a good idea, slot options might be but i think you just need
to ensure that the symbol is also imported and exported in the current package
by resolve-referrences.

The way i solved this for now is just adding a find-ids to the postgres option
at the minute it's going to return all ids and i'm stopping now and setting up
the gitlab ci to use postgres so i can make sure i'm not gonna slip on testing.


# ideasd

ok so we're gonna have json readers, serializers and also an object store backend

the json reader and writer you use will have to be configurable and i guess there's two
ways of doing this, we either generate the store, serialize and read methods for each
class or we use a metaclass or something like that to do somze wizard shjit who cares.

## meta object

we might want to keep the key in the slot class so that we know what to serialize a slot too.

although we might not need to if we just add a method for each one or whatever.


(defclass foo ()
  ((foo :initarg :foo
  

## could use method hooks

use method hooks to do things like add a storage backend if we just are not using meta objects

metaclass will be needed if you want to save heap space on functions
so we might need a way of extending what we can store in the class about slots etc.

## we're gonn have issues

meta object would be better than having generics witwh 1000 generated methods for some objects.

## tests

test fucking everything.

## a slot is named something like type and you're fucked

we need to watch when intern returns other than :inherited http://clhs.lisp.se/Body/f_find_s.htm

when it does we can append the schema name on the front. Another alternative is not
importing the whole of cl, but i don't think that's as good of an idea.
